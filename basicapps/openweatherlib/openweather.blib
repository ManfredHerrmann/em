' This script is an example of the EMDO101 energy manager
' Please visit us at www.swissembedded.com
' Copyright (c) 2011 - 2015 swissEmbedded GmbH, All rights reserved.
' @DESCRIPTION EMDO open weather api 
' @VERSION 1.0
' Please make sure you are registered at open weather with a valid api key
' The API description can be found here https://openweathermap.org/api
' If you use this service on a regular basis, we recommend to make donations

' Some examples on usage 
'Loading Http library, make sure it is installed on EMDO
'LIBRARY LOAD "http"

'Adjust server IP and username to your bridge setting (see developers url below for details)
'key$="21254ca4c403151ea2540fa0f1545e6d"
'pos$="q=Baden+CH" ' Nearby town + country code
'lng$="de" ' german language output for the weather
'unit$="metric"
'start:
' err%= OWForecastWeather( key$, pos$, lng$, unit$, cnt%)
' PAUSE 5000
'GOTO start

' Init all global variables for open weather
SUB OWInit(cnt%)
    DIM OW_sun$(2)
    DIM OW_cnt%, OW_time$(2,cnt%) 
	DIM OW_symbol%(cnt%), OW_symbolN$(cnt%), OW_symbolV$(cnt%)
	DIM OW_precipation$(cnt%), OW_precipationU$(cnt%), OW_precipationT$(cnt%) 
    DIM OW_windDirection(cnt%), OW_windDirectionC$(cnt%), OW_windDirectionN$(cnt%)
	DIM OW_windSpeed(cnt%), OW_windSpeedN$(cnt%)
    DIM OW_temperature(3,cnt%), OW_temperatureU$
    DIM OW_pressure(cnt%), OW_humidity(cnt%)
    DIM OW_cloudsN$(cnt%)
	DIM OW_clouds(cnt%)
END SUB

' Read weather forecast of the next 5 days
' API documentation available at https://openweathermap.org/forecast5
' key$ open weather key
' pos$ position lat=35&lon=139 or id=2172797 or zip=94040,us or q=London,uk (iso3166 country code)
' lng$ de, en, etc, pls see api description
' unit$ imperial or metric
' cnt%  number of forecast entries
' return error code if negative value
' Attn:
' This functions changes these global variables:
' OW_cnt% number of valid weater entries
' OW_sun$(2) rise, set
' OW_time$(2,cnt%) rise, set unix time utc of forecast
' OW_symbol%(cnt%) symbols number
' OW_symbolN$(cnt%) name
' OW_symbolV$(cnt%) var
' OW_precipation$(cnt%) value in %
' OW_precipationU$(cnt%) unit 1h or 3h
' OW_precipationT$(cnt%) type snow or rain
' OW_windDirection(cnt%) in mps
' OW_windDirectionC$(cnt%) code
' OW_windDirectionN$(cnt%) name
' OW_windSpeed(cnt%) in mps
' OW_windSpeedN$(cnt%) name
' OW_temperature(3,cnt%) value, min, max
' OW_temperatureU$ unit Celsius, Kelvin, Fahrenheit
' OW_pressure(cnt%) value in hPa 
' OW_humidity(cnt%) value in %
' OW_cloudsN$(cnt%)
' OW_clouds$(cnt%)

FUNCTION OWForecastWeather( key$, pos$, lng$, unit$, cnt%)
    LOCAL err%, n%, con%, lang$, units$, cnts$
	lang$=""
	IF lng$ <> "" THEN
	 lang$="&lang="+lng$
	ENDIF
	units$=""
	IF unit$ <> "" THEN
	 units$="&units="+unit$
	ENDIF
	cnts$="&cnt="+str$(cnt%)
	
	err%=HTTPRequest("api.openweathermap.org", 80, con%, "GET","/data/2.5/forecast?"+pos$+lang$+units$+"&appid="+key$+"&mode=xml"+cnts$, "", "" , 5000)
	IF err% <0 THEN
     print "open failed"
	 IF con% >=0 THEN n%=HTTPClose(con%)
	 OWCurrentWeather=err%
	 EXIT FUNCTION
	ENDIF	
	
	' Read the <sun />
	LOCAL suna$(3),suns$
	suna$(0)="<sun "
	suna$(1)="/>
	suna$(2)="suns$"	
	n%=StreamSearch(HTTPResponse(con%),"suns$", 5000)

	IF n% <> 1 THEN
	 n%=HTTPClose(con%)
	 OWCurrentWeather=-2
	 EXIT FUNCTION		
	ENDIF
    
	' <time 
	LOCAL timea$(3),times$
	timea$(0)="<time "
	timea$(1)=">"
	timea$(2)="times$"	
	
	' <symbol 
	LOCAL symbola$(3), symbols$
	symbola$(0)="<symbol "
	symbola$(1)="/>"
	symbola$(2)="symbols$"

	' <precipitation 
	LOCAL precipitationa$(3), precipitations$
	precipitationa$(0)="<precipitation "
	precipitationa$(1)="/>"
	precipitationa$(2)="precipitations$"

	' <windDirection 
	LOCAL windDirectiona$(3), windDirections$
	windDirectiona$(0)="<windDirection "
	windDirectiona$(1)="/>"
	windDirectiona$(2)="windDirections$"
	
	' <windSpeed 
	LOCAL windSpeeda$(3), windSpeeds$
	windSpeeda$(0)="<windSpeed "
	windSpeeda$(1)="/>"
	windSpeeda$(2)="windSpeeds$"

	' <temperature 
	LOCAL temperaturea$(3), temperatures$
	temperaturea$(0)="<temperature "
	temperaturea$(1)="/>"
	temperaturea$(2)="temperatures$"

	' <pressure 
	LOCAL pressurea$(3), pressures$
	pressurea$(0)="<pressure "
	pressurea$(1)="/>"
	pressurea$(2)="pressures$"

	' <humidity
	LOCAL humiditya$(3), humiditys$
	humiditya$(0)="<humidity "
	humiditya$(1)="/>"
	humiditya$(2)="humiditys$"
	
	' <clouds
	LOCAL cloudsa$(3), cloudss$
	cloudsa$(0)="<clouds "
	cloudsa$(1)="/>"
	cloudsa$(2)="cloudss$"
	
	LOCAL state%, idx%
	state%=0
	
	OW_sun(0)=HTTPGetValue$(suns$,"rise","", 0,0)
	OW_sun(1)=HTTPGetValue$(suns$,"set","", 0,0)
	
	' read each time entry
	FOR idx% = 0 TO (cnt%-1)
	 times$=""
	 symbols$=""
	 precipitations$=""
	 windDirections$=""
	 windSpeeds$=""
	 temperatures$=""
	 pressures$=""
	 humiditys$=""
	 cloudss$=""
     n%=StreamSearch(HTTPReadToken(con%,"</time>",state%),"timea$", "symbola$", "precipitationa$", "windDirectiona$", "windSpeeda$",	 "temperaturea$", "pressurea$", "humiditya$", "cloudsa$", 5000)
	 IF n%=0 OR state%=-1 THEN EXIT FOR
	 OW_time$(0,idx%)=HTTPGetValue$(times$,"from","",0,0)
	 OW_time$(1,idx%)=HTTPGetValue$(times$,"to","",0,0)
	 OW_symbol%(idx%)=val(HTTPGetValue$(symbols$, "number","0",0,0))
	 OW_symbolN$(idx%)=HTTPGetValue$(symbols$,"name","",0,0 )
	 OW_symbolV$(idx%)=HTTPGetValue$(symbols$,"var","",0,0 )
	 OW_precipation$(cnt%)=val(HTTPGetValue$(precipitations$,"value","0",0,1 ))
	 OW_precipationU$(cnt%)=HTTPGetValue$(precipitations$,"unit","",0,0 )
	 OW_precipationT$(cnt%)=HTTPGetValue$(precipitations$,"type","",0,0 ) 
     OW_windDirection(cnt%)=HTTPGetValue$(windDirections$,"deg","0",0,0 ) 
	 OW_windDirectionC$(cnt%)=HTTPGetValue$(windDirections$,"code","",0,0 )
	 OW_windDirectionN$(cnt%)=HTTPGetValue$(windDirections$,"name", "",0,0 )
	 OW_windSpeed(cnt%)=val(HTTPGetValue$(windSpeeds$,"mps","",0,0 ))
	 OW_windSpeedN$(cnt%)=HTTPGetValue$(windSpeeds$,"name","",0,0 )
     OW_temperature(0,cnt%)=HTTPGetValue$(temperatures$,"value","",0,0 )
	 OW_temperature(1,cnt%)=HTTPGetValue$(temperatures$,"min","",0,0 )
	 OW_temperature(2,cnt%)=HTTPGetValue$(temperatures$,"max","",0,0 )
	 OW_temperatureU$=HTTPGetValue$(temperatures$,"unit","",0,0 )
     OW_pressure(cnt%)=val(HTTPGetValue$(pressures$,"value","",0,0 ))
	 OW_humidity(cnt%)=val(HTTPGetValue$(humiditys$,"value","",0,0 ))
     OW_clouds(cnt%)=val(HTTPGetValue$(cloudss$,"all", "",0,0))
	 OW_cloudsN$(cnt%)=HTTPGetValue$(cloudss$,"value", "",0,0)
	NEXT idx%
	
	OW_cnt%=idx%
	
    n%=HTTPClose(con%)	
	OWCurrentWeather=0
END FUNCTION


