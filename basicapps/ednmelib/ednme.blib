' This script is an example of the EMDO101 energy manager
' Please visit us at www.swissembedded.com
' Copyright (c) 2011 - 2017 swissEmbedded GmbH, All rights reserved.
' @DESCRIPTION EMDO MQTT library for communication with www.ednme.com portal
' @VERSION 1.0


' Some examples on usage:
' err%=EdDisconnect()
' err%=EdConnect("", "")
' msg$="{"+chr$(34)+"kWh1"+chr$(34)+":"+str$(kW1+kW2+kW2)+"}"
' err%=EdPublish(msg$)

' Connect to Ednme web service
' return negative on error
FUNCTION EdConnect()
 LOCAL sc%
 sc%=MQTTConnectTLS(cdb("mqtt:server","mqtt.ednme.com"),cdb("mqtt:port",8883),SYS.GET("asset","serialID"),"C0",cdb("mqtt:cacrt","ca.crt"),cdb("mqtt:clicrt","client.crt"),cdb("mqtt:clikey","client.key"),cdb("mqtt:usr",""),cdb("mqtt:pw",""),"","",5000)
 IF sc% < 0 THEN
  PRINT "EDNME: Connect to Ednme failed"
  EdConnect=sc%
  EXIT FUNCTION
 ENDIF
 ' topic u/#username20#/#serialId106#/system
 sc%=MQTTSubscribe("2","u/"+cdb("mqtt:usr","")+"/"+SYS.GET("asset","serialID")+"/system",5000)
 IF sc% < 0 THEN
  PRINT "EDNME: Subscribe to Ednme failed"
  EdConnect=sc%
  EXIT FUNCTION
 ENDIF
 EdConnect=0
END FUNCTION

' Disconnect from Ednme web service and unsubscribe
' return negative on error
FUNCTION EdDisconnect()
 LOCAL sc%
 sc%=MQTTUnsubscribe("u/"+cdb("mqtt:usr","")+"/"+SYS.GET("asset","serialID")+"/system",5000)
 IF sc% < 0 THEN
  ' We disconnect anyhow, this is just for being nice
  PRINT "EDNME: Unsubscribe to Edmne failed" sc%
 ENDIF 
 sc%=MQTTDisconnect(5000)
 EdDisconnect=sc%
END FUNCTION

' Publish to Ednme web service
' gadId$ gadget identifier created by webservice
' gadTy$ gadget type, e.g. EMOB
' q$   quality
' msg$ message to publish
' return negative on error
FUNCTION EdPublish(gadId$,gadTy$,q$,msg$)
 LOCAL sc%
 sc%=MQTTPublish(q$,EdTopicNode$(gadId$,gadTy$),msg$,5000)
  IF sc% < 0 THEN  
  PRINT "EDNME: Publish to Edmne failed" sc%
 ENDIF 
 EdPublish=sc%
END FUNCTION

' Subscribe from Ednme web service
' gadId$ gadget identifier created by webservice
' gadTy$ gadget type, e.g. EMOB
' q$       message quality
' payload$ message payload
' return negative on error
FUNCTION EdSubscribe(gadId$,gadTy$,q$)
 LOCAL sc%
 sc%=MQTTSubscribe(q$,EdTopicWs$(cdb("mqtt:usr",""),gadId$,gadTy$),5000)
 EdSubscribe=sc%
END FUNCTION

' Poll Subscription from Ednme web service
' topic$   message topic
' payload$ message payload
' return positive number of received messages or negative on error
FUNCTION EdSubscription(q$,topic$,payload$)
 EdSubscription=MQTTSubscription(q$,topic$,payload$)
END FUNCTION

' Generate JSON Key Value pair "key":"value"
' key$ key
' val$ value
FUNCTION EdKVS$(key$,val$)
 EdKVS$=chr$(34)+key$+chr$(34)+":"+chr$(34)+val$+chr$(34)
END FUNCTION

' Generate JSON Key Value pair "key":"value"
' key$ key
' val% value
FUNCTION EdKVF$(key$,val%)
 EdKVF$=chr$(34)+key$+chr$(34)+":"+str$(val%)
END FUNCTION

' Generate JSON Key Value pair "key":"value"
' key$ key
' val value
FUNCTION EdKVI$(key$,val)
 EdKVI$=chr$(34)+key$+chr$(34)+":"+str$(val)
END FUNCTION

' Create Topic Name to be send by node
' gadId$ gadget identifier created by webservice
' gadTy$ gadget type, e.g. EMOB
FUNCTION EdTopicNode$(gadId$,gadTy$)
 EdTopicNode$="u/"+cdb("mqtt:usr","")+"/"+SYS.GET("asset","serialID")+"/"+gadId$+"/"+gadTy$+"/node"
END FUNCTION

' Create Topic Name to be send by webservice
' gadId$ gadget identifier created by webservice
' gadTy$ gadget type, e.g. EMOB
FUNCTION EdTopicWs$(gadId$,gadTy$)
 EdTopicWs$="u/"+cdb("mqtt:usr","")+"/"+SYS.GET("asset","serialID")+"/"+gadId$+"/"+gadTy$+"/ws"
END FUNCTION
