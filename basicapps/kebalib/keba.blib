' This script is an example of the EMDO101 energy manager
' Please visit us at www.swissembedded.com
' Copyright (c) 2017 swissEmbedded GmbH, All rights reserved.
' @DESCRIPTION EMDO Keba EV Charger control P20, P30, BMW wallbox
' @VERSION 1.0
' Please make sure the Keba station is configured correctly
' Make sure DIP-switch DWS1.3 = ON
' http://www.keba.com/en/emobility/service-support/downloads/Downloads
' UDP Programmer's Guide V2.0 
' If you have problems, pls ensure that latest firmware is installed on your Keba

' Some examples on usage 
'charger IP
'server$="192.168.0.25"
'start:
' err%=KEBAInfo( server$, info$)
' print err% info$
' pause 60000
'GOTO start

' KEBA UDP command "i"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' info$ firmware and model info
' return value < 0 on error
FUNCTION KEBAInfo( server$, info$)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "i", cons%)
 IF cons% < 0 THEN
  KEBAInfo=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" THEN
  KEBAInfo=-2
  EXIT FUNCTION  
 ENDIF
 info$=rsp$
 KEBAInfo=0
END FUNCTION

' KEBA UDP command "failsafe"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' tmo% timeout to enter failsafe mode during charging if no KEBAEnable or KEBACurrent is send
' maxcur% max charging current in mA during failsafe mode 0, 6000-63000
' sv% 0=enable until next startup of charger, 1=enable failsafe at startup of charger
' return value < 0 on error
FUNCTION KEBAFailsafe( server$, tmo%, maxcur%, sv%)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "failsafe "+str$(tmo%)+" "+str$(maxcur%)+" "+str$(sv%), cons%)
 IF cons% < 0 THEN
  KEBAFailsafe=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAFailsafe=-2
  EXIT FUNCTION  
 ENDIF
 KEBAFailsafe=0
END FUNCTION

' KEBA UDP command "report1"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' id$ ID of the retrieved report
' prod$ model name
' ser$ serial number
' firm$ firmware version
' com% communication module installed(P30 only)
' sec% current clock (P30 only)
' return value < 0 on error
FUNCTION KEBAReport1( server$, id$, prod$, ser$, firm$)
 LOCAL err%, n%, m%, cons%, rsp$
 err%=KEBATx(server$, "report", cons%)
 IF cons% < 0 THEN
  KEBAReport1=-1
  EXIT FUNCTION
 ENDIF
 LOCAL coms$, secs$
 LOCAL ida$(2) LENGTH 20 = (chr$(34)+"ID"+chr$(34)+": "+chr$(34),chr$(34),"id$")
 id$=""
 LOCAL proda$(2) LENGTH 20 = (chr$(34)+"Product-ID"+chr$(34)+": "+chr$(34),chr$(34),"prod$")
 prod$=""
 LOCAL sera$(2) LENGTH 20 = (chr$(34)+"Serial"+chr$(34)+": "+chr$(34),chr$(34),"ser$")
 ser$=""
 LOCAL firma$(2) LENGTH 20 = (chr$(34)+"Firmware"+chr$(34)+": "+chr$(34),chr$(34),"firm$")
 firm$=""
 ' P30 only
 LOCAL coma$(2) LENGTH 20 = (chr$(34)+"COM-module"+chr$(34)+": ",",","coms$")
 coms$="0"
 LOCAL seca$(2) LENGTH 20 = (chr$(34)+"Sec"+chr$(34)+": ", "}", "secs$")
 secs$="0"

 n%=StreamSearch(SocketRead(cons%),"ida$","proda$","sera$","firma$","coma$","seca$",5000)
 m%=SocketClose( cons% )

 IF n% <> 15 AND n% <> 63 THEN
  KEBAReport1=-2
  EXIT FUNCTION
 ENDIF
 com%=val(coms$)
 sec%=val(secs$)
 KEBAReport1=0
END FUNCTION

' KEBA UDP command "report 2"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' id$ ID of the retrieved report
' st% current state of the wallbox
' err1% detail code state 4
' err2% detail code state 4
' plug% current condition of loading connection
' ensys% enable state for charging
' enuser% enable condition via UDP
' maxcur% pilot max current in milliampere
' maxcurp% pilot max in 0.1%
' curhw% highest possible charging current
' curusr% user current
' curfs% current failsafe function
' tmofs% timeout failsafe
' curtim% current preset curtimer (P30 only)
' tmoct% remaining time to accept current value (P30 only)
' se% set energy limit (P30 only)
' out% relay output x2
' inp% input x1
' ser$ serial number
' sec% system clock since wallbox start
' return value < 0 on error
FUNCTION KEBAReport2( server$,id$,st%,err1%,err2%,plug%,ensys%,enuser%,maxcur%,maxcurp%,curhw%,curusr%,curfs%,tmofs%,curtim%,tmoct%,se%,out%,inp%,ser$,sec%)
 LOCAL err%, n%, m%, cons%, rsp$
 err%=KEBATx(server$, "report 2", cons%)
 IF cons% < 0 THEN
  KEBAReport2=-1
  EXIT FUNCTION
 ENDIF
 LOCAL ids$, sts$, errs1$, errs2$, plugs$, ensyss$, enusers$
 LOCAL ida$(2) LENGTH 20 = (chr$(34)+"ID"+chr$(34)+": "+chr$(34), chr$(34), "id$")
 id$=""
 LOCAL sta$(2) LENGTH 20 = (chr$(34)+"State"+chr$(34)+": ", ",", "sts$")
 sts$="0"
 LOCAL erra1$(2) LENGTH 20 = (chr$(34)+"Error1"+chr$(34)+": ", ",", "errs1$")
 errs1$="0"
 LOCAL erra2$(2) LENGTH 20 = (chr$(34)+"Error2"+chr$(34)+": ", ",", "errs2$")
 errs2$="0"
 LOCAL pluga$(2) LENGTH 20 = (chr$(34)+"Plug"+chr$(34)+": ", ",", "plugs$")
 plugs$="0"
 LOCAL ensysa$(2) LENGTH 20 = (chr$(34)+"Enable sys"+chr$(34)+": ", ",", "ensyss$")
 ensyss$="0"
 LOCAL enusera$(2) LENGTH 20 = (chr$(34)+"Enable user"+chr$(34)+": ", ",", "enusers$")
 enusers$="0"
 LOCAL maxcura$(2),maxcurs$,maxcurpa$(2),maxcurps$,curhwa$(2),curhws$,curusra$(2),curusrs$,curfsa$(2),curfss$
 LOCAL maxcura$(2) LENGTH 20 = (chr$(34)+"Max curr"+chr$(34)+": ", ",", "maxcurs$")
 maxcurs$="0"
 LOCAL maxcurpa$(2) LENGTH 20 = (chr$(34)+"Max curr %"+chr$(34)+": ", ",", "maxcurps$")
 maxcurps$="0"
 LOCAL curhwa$(2) LENGTH 20 = (chr$(34)+"Curr HW"+chr$(34)+": ", ",", "curhws$")
 curhws$="0"
 LOCAL curusra$(2) LENGTH 20 = (chr$(34)+"Curr user"+chr$(34)+": ", ",", "curusrs$")
 curusrs$="0"
 LOCAL curfsa$(2) LENGTH 20 = (chr$(34)+"Curr FS"+chr$(34)+": ", ",", "curfss$")
 curfss$="0"
 LOCAL tmofss$, curtims$,tmocts$, ses$, outs$,inps$, sers$, secs$
 LOCAL tmofsa$(2) LENGTH 20 = (chr$(34)+"Tmo FS"+chr$(34)+": ", ",", "tmofss$")
 tmofss$="0"
 LOCAL curtima$(2) LENGTH 20 = (chr$(34)+"Curr timer"+chr$(34)+": ", ",", "curtims$")
 curtims$="0"
 LOCAL tmocta$(2) LENGTH 20 = (chr$(34)+"Tmo CT"+chr$(34)+": ", ",", "tmocts$")
 tmocts$="0"
 LOCAL sea$(2) LENGTH 20 = (chr$(34)+"Setenergy"+chr$(34)+": ", ",", "ses$")
 ses$="0"
 LOCAL outa$(2) LENGTH 20 = (chr$(34)+"Output"+chr$(34)+": ", ",", "outs$")
 outs$="0"
 LOCAL inpa$(2) LENGTH 20 = (chr$(34)+"Input"+chr$(34)+": ", ",", "inps$")
 inps$="0"
 LOCAL sera$(2) LENGTH 20 = (chr$(34)+"Serial"+chr$(34)+": "+chr$(34), chr$(34), "ser$")
 ser$=""
 LOCAL seca$(2) LENGTH 20 = (chr$(34)+"Sec"+chr$(34)+": ", "}", "secs$")
 secs$="0"
 
 n%=StreamSearch(SocketRead(cons%),"ida$","sta$","erra1$","erra2$","pluga$","ensysa$","enusera$","maxcura$","maxcurpa$","curhwa$","curusra$","curfsa$","tmofsa$","curtima$","tmocta$","sea$","outa$","inpa$","sera$","seca$",5000)
 m%=SocketClose( cons% )

 IF n% <> 2097151 AND n% <> 262143 THEN
  KEBAReport2=-2
  EXIT FUNCTION
 ENDIF
 st%=val(sts$)
 err1%=val(errs1$)
 err2%=val(errs2$)
 plug%=val(plugs$)
 ensys%=val(ensyss$)
 enuser%=val(enusers$)
 maxcur%=val(maxcurs$)
 maxcurp%=val(maxcurps$)
 curhw%=val(curhws$)
 curusr%=val(curusrs$)
 curfs%=val(curfss$)
 tmofs%=val(tmofss$)
 curtim%=val(curtims$)
 tmoct%=val(tmocts$)
 se%=val(ses$)
 out%=val(outs$)
 inp%=val(inps$)
 sec%=val(secs$)
 KEBAReport2=0
END FUNCTION

' KEBA UDP command "report 3"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' id$ ID of the retrieved report
' U1% voltage phase 1
' U2% voltage phase 2
' U3% voltage phase 3
' I1% current phase 1
' I2% current phase 2
' I3% current phase 3
' P% real power in mW
' PF% power factor in 0.1%
' E% power consumption in 0.1Wh for loading session
' Etot% Total power consumption in 0.1Wh without current loading session
' ser$ serial number
' sec% system clock since wallbox start
' return value < 0 on error
FUNCTION KEBAReport3( server$, id$, U1%, U2%, U3%, I1%, I2%, I3%, P%, PF%, E%, Etot%, ser$, sec%)
 LOCAL err%, n%, m%, con%, rsp$
 err%=KEBATx(server$, "report 3", cons%)
 IF cons% < 0 THEN
  KEBAReport3=-1
  EXIT FUNCTION
 ENDIF
 LOCAL Us1$, Us2$, Us3$
 LOCAL ida$(2) LENGTH 20 = (chr$(34)+"ID"+chr$(34)+": "+chr$(34), chr$(34), "id$")
 id$=""
 LOCAL Ua1$(2) LENGTH 20 = (chr$(34)+"U1"+chr$(34)+": ", ",", "Ua1$")
 Us1$="0"
 LOCAL Ua2$(2) LENGTH 20 = (chr$(34)+"U2"+chr$(34)+": ", ",", "Ua2$")
 Us2$="0"
 LOCAL Ua3$(2) LENGTH 20 = (chr$(34)+"U3"+chr$(34)+": ", ",", "Ua3$")
 Us3$="0"
 LOCAL Is1$, Is2$, Is3$
 LOCAL Ia1$(2) LENGTH 20 = (chr$(34)+"I1"+chr$(34)+": ", ",", "Ia1$")
 Is1$="0"
 LOCAL Ia2$(2) LENGTH 20 = (chr$(34)+"I2"+chr$(34)+": ", ",", "Ia2$")
 Is2$="0"
 LOCAL Ia3$(2) LENGTH 20 = (chr$(34)+"I3"+chr$(34)+": ", ",", "Ia3$")
 Is3$="0"
 LOCAL Ps$, PFs$, Es$, Etots$
 LOCAL Pa$(2) LENGTH 20 = (chr$(34)+"P"+chr$(34)+": ", ",", "Ps$")
 Ps$="0"
 LOCAL PFa$(2) LENGTH 20 = (chr$(34)+"PF"+chr$(34)+": ", ",", "PFs$")
 PFs$="0"
 LOCAL Ea$(2) LENGTH 20 = (chr$(34)+"E pres"+chr$(34)+": ", ",", "Es$")
 Es$="0"
 LOCAL Etota$(2) LENGTH 20 = (chr$(34)+"E total"+chr$(34)+": ", ",", "Etots$")
 Etots$="0"
 LOCAL secs$
 LOCAL sera$(2) LENGTH 20 = (chr$(34)+"Serial"+chr$(34)+": "+chr$(34), chr$(34), "ser$")
 ser$=""
 LOCAL seca$(2) length 20 = (chr$(34)+"Sec"+chr$(34)+": ", "}", "secs$")
 secs$="0"
 n%=StreamSearch(SocketRead(cons%),"ida$","Ua1$","Ua2$","Ua3$","Ia1$","Ia2$","Ia3$","Pa$","PFa$","Ea$","Etota$","sera$","seca$",5000)
 m%=SocketClose( cons% )
 IF n% <> 16383 THEN
  KEBAReport3=-2
  EXIT FUNCTION
 ENDIF
 U1%=val(Us1$)
 U2%=val(Us1$)
 U3%=val(Us1$)
 I1%=val(Is1$)
 I2%=val(Is2$)
 I3%=val(Is3$)
 P%=val(Ps$)
 PF%=val(PFs$)
 E%=val(Es$)
 Etot%=val(Etots$)
 sec%=val(secs$)
 KEBAReport3=0
END FUNCTION

' KEBA UDP command "report 100"
' P30,BMW wallbox
' server$ ip address of the charger
' off% history offset 1..30
' id$ ID calling report
' sess% session counter
' curhw% highest possible charging current
' estart% total energy at start
' epres% delivered energy
' started% session started timestamp
' ended% session ended timestamp
' reason% reason session has ended
' tag$ rfid tag
' clss$ rfid class
' ser$ serial number
' sec% system clock since wallbox start
' return value < 0 on error
FUNCTION KEBAReport100( server$, off%, id$, sess%, curhw%, estart%, epres%, started%, ended%, reason%, tag$, clss$, ser$, sec%)
 LOCAL err%, n%, m%, cons%, rsp$
 err%=KEBATx(server$, "report "+str$(100+off%), cons%)
 IF cons% < 0 THEN
  KEBAReport100=-1
  EXIT FUNCTION
 ENDIF
 LOCAL estarts$, epress$
 LOCAL ida$(2) LENGTH 20 = (chr$(34)+"ID"+chr$(34)+": "+chr$(34), chr$(34), "id$")
 id$=""
 LOCAL sessa$(2) LENGTH 20 = (chr$(34)+"Session ID"+chr$(34)+": ", "}", "sesss$")
 sesss$="0"
 LOCAL curhwa$(2) LENGTH 20 = (chr$(34)+"Curr HW   "+chr$(34)+": ", ",", "curhws$")
 curhws$="0"
 LOCAL estarta$(2) LENGTH 20 = (chr$(34)+"E Start   "+chr$(34)+": ", ",", "estarts$")
 estarts$="0"
 LOCAL epresa$(2) LENGTH 20 = (chr$(34)+"E Pres    "+chr$(34)+": ", ",", "epress$")
 epress$="0"
 LOCAL starteds$, endeds$
 LOCAL starteda$(2) LENGTH 20 = (chr$(34)+"started[s]"+chr$(34)+": ", ",", "starteds$")
 starteds$="0"
 LOCAL endeda$(2) LENGTH 20 = (chr$(34)+"ended[s]  "+chr$(34)+": ", ",", "endeds$")
 endeds$="0"
 LOCAL reasons$, clsss$
 LOCAL reasona$(2) LENGTH 20 = (chr$(34)+"reason "+chr$(34)+": ", ",", "reasons$")
 reasons$="0"
 LOCAL taga$(2) LENGTH 20 = (chr$(34)+"RFID tag"+chr$(34)+": "+chr$(34), chr$(34), "tag$")
 tag$=""
 LOCAL clssa$(2) LENGTH 20 = (chr$(34)+"RFID class"+chr$(34)+": "+chr$(34), chr$(34), "clss$")
 clss$=""
 LOCAL secs$
 LOCAL sera$(2) LENGTH 20 = (chr$(34)+"Serial"+chr$(34)+": "+chr$(34), chr$(34), "ser$")
 ser$=""
 LOCAL seca$(2) LENGTH 20 = (chr$(34)+"Sec"+chr$(34)+": ", "}", "secs$")
 secs$="0"
 n%=StreamSearch(SocketRead(cons%),"ida$","sessa$","curhwa$", "estarta$", "epresa$", "starteda$","endeda$", "reasona$","taga$","clssa$", "sera$","seca$", 5000)
 m%=SocketClose( cons% )

 IF n% <> 8191 THEN
  KEBAReport100=-2
  EXIT FUNCTION
 ENDIF
 sess%=val(sesss$)
 curhw%=val(curhws$)
 estart%=val(estarts$)
 epres%=val(epress$)
 started%=val(starteds$)
 ended%=val(endeds$)
 reason%=val(reasons$)
 tag%=val(tags$)
 clss%=val(clsss$)
 sec%=val(secs$)
 KEBAReport100=0
END FUNCTION

' KEBA UDP command "ena"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' en% enable or disable 0=disabled, 1=enabled
' return value < 0 on error
FUNCTION KEBAEnable( server$, en%)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "ena "+str$(en%), cons%)
 IF cons% < 0 THEN
  KEBAEnable=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAEnable=-2
  EXIT FUNCTION  
 ENDIF
 KEBAEnable=0
END FUNCTION

' KEBA UDP command "curr"
' P20,P30,BMW wallbox
' server$ ip address of the charger
' cur% current in mA range 6000...63000
' return value < 0 on error
FUNCTION KEBACurrent( server$, cur%)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "curr "+str$(cur%), cons%)
 IF cons% < 0 THEN
  KEBACurrent=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBACurrent=-2
  EXIT FUNCTION  
 ENDIF
 KEBACurrent=0
END FUNCTION

' KEBA UDP command "output"
' P30,BMW wallbox
' server$ ip address of the charger
' out% output 0=open, 1=closed
' return value < 0 on error
FUNCTION KEBAOutput( server$, out%)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "output "+str$(out%), cons%)
 IF cons% < 0 THEN
  KEBAOutput=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAOutput=-2
  EXIT FUNCTION  
 ENDIF
 KEBAOutput=0
END FUNCTION

' KEBA UDP command "currtime"
' P30,BMW wallbox
' server$ ip address of the charger
' cur% current in mA range 6000...63000
' dly% delay in seconds 860400 max
' return value < 0 on error
FUNCTION KEBACurrentTime( server$, cur%, dly%)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "currtime "+str$(cur%)+" "+str$(dly%), cons%)
 IF cons% < 0 THEN
  KEBACurrentTime=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBACurrentTime=-2
  EXIT FUNCTION  
 ENDIF
 KEBACurrentTime=0
END FUNCTION

' KEBA UDP command "setenergy"
' P30,BMW wallbox
' server$ ip address of the charger
' egy% charging energy limit in 0.1Wh ,0=no limit
' return value < 0 on error
FUNCTION KEBAEnergy( server$, egy%)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "setenergy "+str$(egy%), cons%)
 IF cons% < 0 THEN
  KEBAEnergy=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAEnergy=-2
  EXIT FUNCTION  
 ENDIF
 KEBAEnergy=0
END FUNCTION

' KEBA UDP command "start"
' P30,BMW wallbox
' server$ ip address of the charger
' tag$ rfid tag
' clss$ rfid classifier
' return value < 0 on error
FUNCTION KEBAStart( server$, tag$, clss$)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "start "+tag$+" "+clss$, cons%)
 IF cons% < 0 THEN
  KEBAStart=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAStart=-2
  EXIT FUNCTION  
 ENDIF
 KEBAStart=0
END FUNCTION

' KEBA UDP command "stop"
' P30,BMW wallbox
' server$ ip address of the charger
' tok$ rfid token
' return value < 0 on error
FUNCTION KEBAStop( server$, tok$)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "stop "+tok$, cons%)
 IF cons% < 0 THEN
  KEBAStop=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAStop=-2
  EXIT FUNCTION  
 ENDIF
 KEBAStop=0
END FUNCTION

' KEBA UDP command "display"
' P30
' server$ ip address of the charger
' act% activate the usage
' min% minimal duration for text display
' max% maximal duration for text display
' txt$ text 23 chars max
' return value < 0 on error
FUNCTION KEBADisplay( server$, act%, min%, max%, txt$)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "display "+str$(act%)+" "+str$(min%)+" "+str$(max%)+" 0 "+txt$, cons%)
 IF cons% < 0 THEN
  KEBADisplay=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBADisplay=-2
  EXIT FUNCTION  
 ENDIF
 KEBADisplay=0
END FUNCTION

' KEBA UDP command "unlock"
' send ena 0 command prior to unlock!
' P20,P30,BMW wallbox
' server$ ip address of the charger
' return value < 0 on error
FUNCTION KEBAUnlock( server$)
 LOCAL err%, n%, cons%, rsp$
 err%=KEBATx(server$, "unlock", cons%)
 IF cons% < 0 THEN
  KEBAUnlock=-1
  EXIT FUNCTION
 ENDIF
 rsp$=SocketReadLn$(cons%,chr$(10),2000)
 n%=SocketClose( cons% )
 IF rsp$="" OR left$(rsp$,6,2)<>"OK" THEN
  KEBAUnlock=-2
  EXIT FUNCTION  
 ENDIF
 KEBAUnlock=0
END FUNCTION

' KEBA UDP communication transmit
' server$ charger device to communicate with
' rq$ request string to be send
' cons% server connection
' return value < 0 on error 
FUNCTION KEBATx(server$, rq$, cons%)
 LOCAL n%, conc%, conc$
 cons% = SocketServer ( 0, 7090 )
 IF cons% < 0 THEN
  KEBATx=-1
  EXIT FUNCTION
 ENDIF
 conc% = SocketClient( 0, server$, 7090 )
 IF conc% < 0 THEN
  n%=SocketClose( cons% )
  KEBATx=-1
  EXIT FUNCTION
 ENDIF

 n%=SocketOption(cons%,"SO_SNDTIMEO",2000)
 n%=SocketOption(conc%,"SO_RCVTIMEO",2000)

 n%=SocketWrite( conc%, rq$)
 n%=SocketClose( conc% )
 KEBATx=0
END FUNCTION
